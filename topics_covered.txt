Topics covered by this project.
	FLASK:
		1.Basic CRUD operation with mysql as database using sqlAlchamey.
		2.User Authentication with JWT token using Flak_JWT_extended.
		3.pipenv and pipreq is two different alternative for pip.
		4.We can generate a requirement.txt file using :
			1.With virtual env:
				1.pip  freeze > requirement.txt
				2.pipenv -r lock >> requirement.txt
			2.Without virtual env:				
				1.pipreqs /path/to/project
		5.Using pipenv,it can automatically update pipfile like requirement.txt when adding a new package using pipenv.
		6.If using pip we can write a script that can automatically update the requirement.txt by implement them in cron.
		7.To activate a new venv using pipenv use pipenv shell or activate existing shell use pipenv run 'command'.
		8.__init__.py to make your flask project as a py package.
		9.sentry for error logging and error notifications in production.
		10.subprocess:
			give command in []
			eg:['cat','file.extension']
			run -> simply runs the command and returns the argument and result_code (success=0 , fail=1)
			call -> simply runs the command and returns result_code (success=0 , fail=1)
			Popen -> execute and returns the result printed in terminal.
			if we call Popen.communicate() it returns two datas:
				strout -> output in bytes 
				strerr -> error in bytes
				convert it to str by usinf stdout.decode() and for error stderr.decode()